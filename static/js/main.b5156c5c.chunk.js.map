{"version":3,"sources":["GoodsList.tsx","api/goods.ts","components/LoadingError.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","color","id","name","style","wait","delay","Promise","resolve","setTimeout","getAll","fetch","then","response","json","LoadingError","className","App","useState","setGoods","loading","setLoading","loadingFirstFive","setLoadingFirstFive","loadingRed","setLoadingRed","hasError","setHasError","handleAllGoods","a","catch","handle5FirstGoods","sort","curGood","nextGood","localeCompare","slice","handleRedGoods","filter","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"2QAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,GAAIC,EAASH,EAATG,KAEnB,OACE,oBAEE,UAAQ,OACRC,MAAO,CAAEH,SAHX,SAKGE,GAJID,SCTR,SAASG,EAAKC,GACnB,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAG7C,SAASI,IACd,OAAOC,MAPI,yEAQRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICZMC,EAAyB,kBACpC,qBAAKC,UAAU,kCAAf,mDCYWC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAgDH,oBAAS,GAAzD,mBAAOI,EAAP,KAAyBC,EAAzB,KACA,EAAoCL,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAgCP,oBAAS,GAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,uCAAG,sBAAAC,EAAA,6DACrBR,GAAW,GACXM,GAAY,GAFS,SAGftB,EAAK,KAHU,OAIrBgB,GAAW,GAEXX,IACGE,KAAKO,GACLW,OAAM,WACLT,GAAW,GACXM,GAAY,MAVK,2CAAH,qDAcdI,EAAiB,uCAAG,sBAAAF,EAAA,6DACxBN,GAAoB,GACpBI,GAAY,GAFY,SAGlBtB,EAAK,KAHa,OAIxBkB,GAAoB,GFzBfb,IACJE,MAAK,SAAAd,GAAK,OAAIA,EACZkC,MAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQ9B,KAAKgC,cAAcD,EAAS/B,SAChEiC,MAAM,EAAG,MEyBTxB,KAAKO,GACLW,OAAM,WACLP,GAAoB,GACpBI,GAAY,MAVQ,2CAAH,qDAcjBU,EAAc,uCAAG,sBAAAR,EAAA,6DACrBJ,GAAc,GACdE,GAAY,GAFS,SAGftB,EAAK,KAHU,OAIrBoB,GAAc,GFhCTf,IACJE,MAAK,SAAAd,GAAK,OAAIA,EAAMwC,QAAO,SAACtC,GAAD,MAAyB,QAAfA,EAAKC,YEkCxCW,KAAKO,GACLW,OAAM,WACLL,GAAc,GACdE,GAAY,MAVK,2CAAH,qDAcpB,OACE,sBAAKX,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mCAIA,wBACEuB,KAAK,SACL,UAAQ,aACRvB,UAAWwB,IACT,SAAU,UAAW,aAAc,CAAE,aAAcpB,IAErDqB,QAASb,EANX,4BAWA,wBACEW,KAAK,SACL,UAAQ,oBACRvB,UAAWwB,IACT,SAAU,UAAW,aAAc,CAAE,aAAclB,IAErDmB,QAASV,EANX,gCAWA,wBACEQ,KAAK,SACL,UAAQ,aACRvB,UAAWwB,IACT,SAAU,UAAW,aAAc,CAAE,aAAchB,IAErDiB,QAASJ,EANX,4BAWCX,GAAY,cAAC,EAAD,IAEb,cAAC,EAAD,CAAW5B,MAAOA,QCtGxB4C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b5156c5c.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => {\n      const { color, id, name } = good;\n\n      return (\n        <li\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      );\n    })}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((curGood, nextGood) => curGood.name.localeCompare(nextGood.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter((good) => good.color === 'red'));\n};\n","import React from 'react';\n\nexport const LoadingError: React.FC = () => (\n  <div className=\"notification is-danger is-light\">\n    An error occured when loading goods!\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport {\n  getAll,\n  get5First,\n  getRedGoods,\n  wait,\n} from './api/goods';\nimport { LoadingError } from './components/LoadingError';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingFirstFive, setLoadingFirstFive] = useState(false);\n  const [loadingRed, setLoadingRed] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleAllGoods = async () => {\n    setLoading(true);\n    setHasError(false);\n    await wait(1000);\n    setLoading(false);\n\n    getAll()\n      .then(setGoods)\n      .catch(() => {\n        setLoading(false);\n        setHasError(true);\n      });\n  };\n\n  const handle5FirstGoods = async () => {\n    setLoadingFirstFive(true);\n    setHasError(false);\n    await wait(1000);\n    setLoadingFirstFive(false);\n\n    get5First()\n      .then(setGoods)\n      .catch(() => {\n        setLoadingFirstFive(false);\n        setHasError(true);\n      });\n  };\n\n  const handleRedGoods = async () => {\n    setLoadingRed(true);\n    setHasError(false);\n    await wait(1000);\n    setLoadingRed(false);\n\n    getRedGoods()\n      .then(setGoods)\n      .catch(() => {\n        setLoadingRed(false);\n        setHasError(true);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-1\">\n        Dynamic list of Goods\n      </h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        className={classNames(\n          'button', 'is-link', 'is-focused', { 'is-loading': loading },\n        )}\n        onClick={handleAllGoods}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        className={classNames(\n          'button', 'is-link', 'is-focused', { 'is-loading': loadingFirstFive },\n        )}\n        onClick={handle5FirstGoods}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        className={classNames(\n          'button', 'is-link', 'is-focused', { 'is-loading': loadingRed },\n        )}\n        onClick={handleRedGoods}\n      >\n        Load red goods\n      </button>\n\n      {hasError && <LoadingError />}\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}